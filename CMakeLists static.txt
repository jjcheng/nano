cmake_minimum_required(VERSION 3.15)

project(Jotter)
set(CMAKE_CXX_STANDARD 11)

set(COMPILER $ENV{COMPILER})
set(SDK_PATH $ENV{SDK_PATH})

SET(CMAKE_C_COMPILER "${COMPILER}/riscv64-unknown-linux-musl-gcc")
SET(CMAKE_CXX_COMPILER "${COMPILER}/riscv64-unknown-linux-musl-g++")
SET(CMAKE_C_LINK_EXECUTABLE "${COMPILER}/riscv64-unknown-linux-musl-ld")
add_compile_options(
    -march=rv64imafd
    -O3
    -DNDEBUG
    -DNO_OPENCV
    -D_MIDDLEWARE_V2_
    -DC906
    -DUSE_TPU_IVE
    -fsigned-char
    -Werror=all
    -Wno-format-truncation
    -fdiagnostics-color=always
    -s
)

include_directories(
    ${SDK_PATH}/cvitek_tdl_sdk/include
    ${SDK_PATH}/cvitek_tdl_sdk/include/cvi_tdl
    ${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/middleware/v2/include
    ${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/middleware/v2/include/linux
    ${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/middleware/v2/include/isp/cv181x
)

# Enable static linking
set(OpenCV_STATIC ON)
add_definitions(-DOPENCV_STATIC)

# Configure OpenCV 4.10.0 for main application
set(OpenCV_DIR "${SDK_PATH}/opencv-mobile-4.10.0/build/install/lib/cmake/opencv4")
#find_package(OpenCV 4.10.0 REQUIRED COMPONENTS core imgproc imgcodecs objdetect)
find_package(OpenCV 4.10.0 REQUIRED)

# Manual configuration for OpenCV 3.2.0 used by the library
#set(OpenCV3_INCLUDE_DIRS "${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/opencv/include")
#set(OpenCV3_LIB_DIR "${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/opencv/lib")
set(OpenCV3_LIBS 
    "${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/opencv/lib/libopencv_core.so.3.2"
    "${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/opencv/lib/libopencv_imgproc.so.3.2"
    "${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/opencv/lib/libopencv_imgcodecs.so.3.2"
)

# Create an INTERFACE target for the header-only library
add_library(opencv3_lib INTERFACE)
#target_include_directories(opencv3_lib INTERFACE ${OpenCV3_INCLUDE_DIRS})
target_link_libraries(opencv3_lib INTERFACE ${OpenCV3_LIBS})

# Add executable
add_executable(Jotter main.cpp)

# Include OpenCV 4 headers for the main application
target_include_directories(Jotter PRIVATE ${OpenCV_INCLUDE_DIRS})

# Debugging information
message(STATUS "Using OpenCV4 version: ${OpenCV_VERSION}")
message(STATUS "Using OpenCV3 include directory: ${OpenCV3_INCLUDE_DIRS}")
message(STATUS "Using OpenCV3 libraries: ${OpenCV3_LIBS}")

# Add curl
set(CURL_LIBRARY "${SDK_PATH}/nano/files/libcurl.so")
find_package(CURL REQUIRED)

# Make build directory
set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
file(MAKE_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})

target_link_libraries(Jotter
    -mcpu=c906fdv
    -L${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/middleware/v2/lib
    -L${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/middleware/v2/lib/3rd
    -lini -lsns_full -lsample -lisp -lvdec -lvenc -lawb -lae -laf -lcvi_bin -lcvi_bin_isp -lmisc -lisp_algo -lsys -lvpu
    opencv3_lib
    #-lopencv_core -lopencv_imgproc -lopencv_imgcodecs
    -L${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/tpu/lib
    -lcnpy -lcvikernel -lcvimath -lcviruntime -lz -lm
    -L${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/ive/lib
    -lcvi_ive_tpu
    -L${SDK_PATH}/cvitek_tdl_sdk/lib
    -lcvi_tdl
    -L${SDK_PATH}/cvitek_tdl_sdk/sample/3rd/lib
    -lpthread -latomic
    ${CURL_LIBRARIES}
    ${OpenCV_LIBS}    # Links OpenCV 4 for the main application
    # Add system dependencies for OpenCV static libraries
    -lpthread -lz -lm
)
